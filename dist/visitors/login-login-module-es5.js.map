{"version":3,"sources":["/./src/app/login/login.component.html","/./src/app/login/login.component.ts","/./src/app/login/login.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,y0G;;;;;;;;;;;;;;;;;;;ACAqD;AACe;AAChB;AAKpD;IAAoC,wEAAa;IAK/C,wBACU,WAAwB,EACxB,WAAwB;QAFlC,YAIE,iBAAO,SACR;QAJS,iBAAW,GAAX,WAAW,CAAa;QACxB,iBAAW,GAAX,WAAW,CAAa;QANlC,cAAQ,GAAc,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC3C,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;;IAMH,CAAC;IACD,oCAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IACD,gCAAO,GAAP;QAAA,iBAoBC;QAnBC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CACnD,kBAAQ;YACE,wBAAI,CAAc;YAC1B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,WAAW,CACd,oBAAoB,EACpB,mBAAmB,EACnB,SAAS,CACV,CAAC;YACF,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACjC,KAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;QACjC,CAAC,EACD,eAAK;YACH,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CACF,CACF,CAAC;IACJ,CAAC;;gBA5BsB,0DAAW;gBACX,kDAAW;;IAPvB,cAAc;QAJ1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,qJAAqC;SACtC,CAAC;OACW,cAAc,CAmC1B;IAAD,qBAAC;CAAA,CAnCmC,oDAAa,GAmChD;AAnC0B;;;;;;;;;;;;;;;;;;;;;;ACPc;AACM;AACI;AACJ;AACT;AAgBtC;IAAA;IAA0B,CAAC;IAAd,WAAW;QAdvB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,+DAAc,CAAC;YAC9B,OAAO,EAAE;gBACP,4DAAY;gBACZ,mDAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC;oBACpB;wBACE,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,MAAM;wBACjB,SAAS,EAAE,+DAAc;qBAC1B;iBACF,CAAC;aACH;SACF,CAAC;OACW,WAAW,CAAG;IAAD,kBAAC;CAAA;AAAH","file":"login-login-module-es5.js","sourcesContent":["module.exports = \"<section class=\\\"section bg-grey\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div\\n      class=\\\"shadow-sm bg-white login-wrapper position-relative overflow-hidden\\\"\\n    >\\n      <div class=\\\"row position-static\\\">\\n        <div class=\\\"column-left col-12 col-md-5 colum-left bg-login\\\">\\n          <div class=\\\"h-100\\\">\\n            <lib-back-button></lib-back-button>\\n            <h1 class=\\\"text-white font-weight-bold column-left-title\\\">\\n              Log in to APSON\\n            </h1>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-7 offset-md-5 col-12\\\">\\n          <form\\n            class=\\\"form pl-4 position-relative pr-4 pt-5\\\"\\n            (ngSubmit)=\\\"onLogin()\\\"\\n            novalidate\\n          >\\n            <lib-alert\\n              [title]=\\\"response.title\\\"\\n              [type]=\\\"response.type\\\"\\n              [message]=\\\"response.message\\\"\\n              *ngIf=\\\"!hideAlert\\\"\\n            ></lib-alert>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"username\\\">Email Address or Phone Number</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"name\\\"\\n                [formControl]=\\\"formData.get('username')\\\"\\n                [value]=\\\"formData.get('username').value\\\"\\n              />\\n              <span\\n                class=\\\"display-error\\\"\\n                *ngIf=\\\"\\n                  formData.get('username').invalid &&\\n                  (formData.get('username').dirty ||\\n                    formData.get('username').touched)\\n                \\\"\\n                >Enter your email or phone number</span\\n              >\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"password\\\">Password</label>\\n              <input\\n                type=\\\"password\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"password\\\"\\n                [formControl]=\\\"formData.get('password')\\\"\\n                [value]=\\\"formData.get('password').value\\\"\\n              />\\n              <span\\n                class=\\\"display-error\\\"\\n                *ngIf=\\\"\\n                  formData.get('password').invalid &&\\n                  (formData.get('password').dirty ||\\n                    formData.get('password').touched)\\n                \\\"\\n                >Password is required</span\\n              >\\n            </div>\\n            <div class=\\\"text-center\\\">\\n              <lib-submit-button\\n                [text]=\\\"'Login to APSON'\\\"\\n                [isBusy]=\\\"isBusy\\\"\\n                [disabled]=\\\"formData.invalid\\\"\\n              ></lib-submit-button>\\n            </div>\\n            <div class=\\\"text-center mt-5\\\">\\n              <a\\n                routerLink=\\\"/forgot-password/\\\"\\n                class=\\\"d-inline-block text-muted btn-underlined\\\"\\n                ><small>Forgot Password?</small></a\\n              >\\n            </div>\\n          </form>\\n          <div class=\\\"text-center mt-5 login-footer\\\">\\n            <p class=\\\"text-muted\\\">\\n              Not a member yet?\\n              <a\\n                routerLink=\\\"/register/\\\"\\n                class=\\\"d-inline-block btn-underlined blog-link-more ml-1\\\"\\n                >Register Now</a\\n              >\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"","import { Component, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService, BaseComponent } from 'shared';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent extends BaseComponent implements OnDestroy {\n  formData: FormGroup = this.formBuilder.group({\n    username: ['', Validators.required],\n    password: ['', Validators.required],\n  });\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n  ) {\n    super();\n  }\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n  onLogin() {\n    this.toggleLoaders(true);\n    this.subscription.add(\n      this.authService.login(this.formData.value).subscribe(\n        response => {\n          const { data } = response;\n          this.hideAlert = false;\n          this.showMessage(\n            'Redirecting you...',\n            'Log in successful',\n            'success',\n          );\n          this.authService.setMember(data);\n          this.authService.gotoMembers();\n        },\n        error => {\n          this.handleError(error);\n        },\n      ),\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'shared';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        pathMatch: 'full',\n        component: LoginComponent,\n      },\n    ]),\n  ],\n})\nexport class LoginModule {}\n"],"sourceRoot":""}